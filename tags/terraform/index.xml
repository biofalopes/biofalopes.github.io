<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Terraform on Fabio M. Lopes</title>
    <link>https://fabiolopes.page/tags/terraform/</link>
    <description>Recent content in Terraform on Fabio M. Lopes</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>fabioctba01@gmail.com (Fabio M. Lopes)</managingEditor>
    <webMaster>fabioctba01@gmail.com (Fabio M. Lopes)</webMaster>
    <lastBuildDate>Fri, 06 Dec 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://fabiolopes.page/tags/terraform/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Deploying a Local EKS Cluster on AWS Outposts</title>
      <link>https://fabiolopes.page/post/eks_outpost/</link>
      <pubDate>Fri, 06 Dec 2024 00:00:00 +0000</pubDate><author>fabioctba01@gmail.com (Fabio M. Lopes)</author>
      <guid>https://fabiolopes.page/post/eks_outpost/</guid>
      <description>&lt;p&gt;The Terraform code provisions an EKS cluster on an AWS Outpost, with the control plane running locally on the Outpost. This differs significantly from deploying an EKS cluster in a standard AWS region, primarily in how worker nodes are managed.&lt;/p&gt;&#xA;&lt;p&gt;The Amazon EKS update history demonstrates the platform&amp;rsquo;s continuous evolution, focusing on enhanced security, scalability, and integration with other AWS services. Since its initial release in June 2018, there&amp;rsquo;s been a significant increase in available features and functionalities, including support for newer Kubernetes versions, expansion to new AWS regions, and the introduction of new deployment options like Fargate and local clusters on AWS Outposts, which is the focus of this work. The introduction of features like managed node groups significantly simplified infrastructure management, automating tasks such as provisioning and lifecycle management of nodes. The availability of EKS-optimized AMIs, including options with GPU support and the Bottlerocket operating system, offers greater flexibility and performance for diverse workloads. Furthermore, integration with services like Amazon EBS, EFS, and FSx for Lustre, via CSI drivers, expanded storage options for the clusters. However, for a local Amazon EKS cluster on AWS Outposts, these resources are significantly more limited; managed node groups are unavailable.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HashiCorp Certified: Terraform Associate Exam</title>
      <link>https://fabiolopes.page/post/terraform-study-guide/</link>
      <pubDate>Sun, 07 Aug 2022 00:00:00 +0000</pubDate><author>fabioctba01@gmail.com (Fabio M. Lopes)</author>
      <guid>https://fabiolopes.page/post/terraform-study-guide/</guid>
      <description>&lt;p&gt;In order to pass the Terraform Associate Exam I followed the Official guide as a baseline for my studies, as I usually do for certification exams and it always works out well for me.&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;The HashiCorp Terraform Associate is considered a &lt;strong&gt;foundational level&lt;/strong&gt; certification, so you can expect to have essential knowledge and skills on the concepts and not necessarily lots of hands-on practice. If you already work with Terraform you probably be able to go very quicky over the topics but it is important to know some details and also some commands that might not be very common for you. You must also know the features that exist on Terraform Enterprise packages and Terraform Cloud.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Managing AWS Autoscaling Groups and Load Balancers using Terraform</title>
      <link>https://fabiolopes.page/post/terraform-2/</link>
      <pubDate>Mon, 01 Aug 2022 00:00:00 +0000</pubDate><author>fabioctba01@gmail.com (Fabio M. Lopes)</author>
      <guid>https://fabiolopes.page/post/terraform-2/</guid>
      <description>&lt;p&gt;This time I&amp;rsquo;ll be using an environment with a Load Balancer and an Autoscaling Group, which is a more complex architecture than the previous one.&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;We&amp;rsquo;ll have the following resources deployed with this procedure:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1 VPC&lt;/li&gt;&#xA;&lt;li&gt;2 Subnets&lt;/li&gt;&#xA;&lt;li&gt;1 Internet Gateway&lt;/li&gt;&#xA;&lt;li&gt;1 Route Table (with a default route and an association)&lt;/li&gt;&#xA;&lt;li&gt;2 Security groups&lt;/li&gt;&#xA;&lt;li&gt;1 Key Pair&lt;/li&gt;&#xA;&lt;li&gt;1 EC2 Instance&lt;/li&gt;&#xA;&lt;li&gt;1 Launch Configuration&lt;/li&gt;&#xA;&lt;li&gt;1 ELB&lt;/li&gt;&#xA;&lt;li&gt;1 ASG&lt;/li&gt;&#xA;&lt;li&gt;2 Autoscaling Policies&lt;/li&gt;&#xA;&lt;li&gt;2 Cloudwatch Metric Alarms&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;It&amp;rsquo;s a very simple and you can build on top of it according to your needs, like the previous infrastructure. The code will be organized in the following structure:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Basic Dev Environment on AWS using Terraform</title>
      <link>https://fabiolopes.page/post/terraform-1/</link>
      <pubDate>Sat, 30 Jul 2022 00:00:00 +0000</pubDate><author>fabioctba01@gmail.com (Fabio M. Lopes)</author>
      <guid>https://fabiolopes.page/post/terraform-1/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s good to have a basic terraform code that deploys a basic environment on AWS whenever you need to run some quick tests on a free tier account.&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;We&amp;rsquo;ll have the following resources deployed with this procedure:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1 VPC&lt;/li&gt;&#xA;&lt;li&gt;1 Subnet&lt;/li&gt;&#xA;&lt;li&gt;1 Internet Gateway&lt;/li&gt;&#xA;&lt;li&gt;1 Route Table (with a default route and an association)&lt;/li&gt;&#xA;&lt;li&gt;1 Security group&lt;/li&gt;&#xA;&lt;li&gt;1 Key Pair&lt;/li&gt;&#xA;&lt;li&gt;1 EC2 Instance&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;It&amp;rsquo;s a very simple and you can build on top of it according to your needs, like adding a RDS instance or more EC2 instances, changing the instance type and so on. The code will be organized in the following structure:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
